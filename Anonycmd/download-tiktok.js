const { tiktokDownloaderVideo } = require('../lib/scrape/tiktok')
const sleep = ms => new Promise(r => setTimeout(r, ms))

let handler = async (m, { conn, text, command }) => {
  if (!text) return m.reply(`Example:\n${command} <TikTok URL>`)

  try {
    m.reply('‚è≥ Please wait, fetching TikTok data...')
    let anu = await tiktokDownloaderVideo(text)
    let item = 0

    for (let imgs of anu.data) {
      if (imgs.type === "nowatermark") {
        await conn.sendMessage(m.chat, {
          video: { url: imgs.url },
          caption: `üé• *Video Info*:
üìç Region: ${anu.region}
‚è≥ Duration: ${anu.duration}
üìÖ Taken: ${anu.taken_at}

üìä *Statistics*:
üëÅÔ∏è Views: ${anu.stats.views}
‚ù§Ô∏è Likes: ${anu.stats.likes}
üí¨ Comments: ${anu.stats.comment}
üîÑ Shares: ${anu.stats.share}
üì• Downloads: ${anu.stats.download}

üë§ *Author*:
üìù Fullname: ${anu.author.fullname}
üè∑Ô∏è Nickname: ${anu.author.nickname}

üéµ *Music*:
üéº Title: ${anu.music_info.title}
üé§ Artist: ${anu.music_info.author}
üíø Album: ${anu.music_info.album}

üìù *Caption*:
${anu.title || 'No Caption'}`
        }, { quoted: m })
      }

      if (imgs.type === "photo") {
        if (item === 0) {
          await conn.sendMessage(m.chat, {
            image: { url: imgs.url },
            caption: `üñºÔ∏è *Photo Info*:
üìç Region: ${anu.region}
üìÖ Taken: ${anu.taken_at}

üìä *Statistics*:
üëÅÔ∏è Views: ${anu.stats.views}
‚ù§Ô∏è Likes: ${anu.stats.likes}
üí¨ Comments: ${anu.stats.comment}
üîÑ Shares: ${anu.stats.share}
üì• Downloads: ${anu.stats.download}

üë§ *Author*:
üìù Fullname: ${anu.author.fullname}
üè∑Ô∏è Nickname: ${anu.author.nickname}

üéµ *Music*:
üéº Title: ${anu.music_info.title}
üé§ Artist: ${anu.music_info.author}
üíø Album: ${anu.music_info.album}

üìù *Caption*:
${anu.title || 'No Caption'}${m.isGroup ? anu.data.length > 1 ? "\nüì• _Remaining photos sent to private chat_\n" : "\n" : "\n"}\n\n> ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥õ·¥á Ä Ä…™`
          }, { quoted: m })
        } else {
          await conn.sendMessage(m.sender, {
            image: { url: imgs.url }
          }, { quoted: m })
        }
        item++
        await sleep(2000)
      }
    }
  } catch (err) {
    console.error(err)
    m.reply('‚ö†Ô∏è Failed to fetch data from TikTok. Please ensure the URL is valid or try again later.')
  }
}

handler.command = ['tiktok', 'tt', 'ttnowm', 'tiktoknowm', 'tiktokslide', 'ttslide', 'tiktokfoto', 'tiktokmp4']
handler.tags = ['download']

module.exports = handler